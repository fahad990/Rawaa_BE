{"version":3,"sources":["../../src/controllers/forget-pass.controller.js"],"names":["forgetPassword","req","res","next","phone","body","findOne","userDetails","status","end","email","code","Math","floor","random","save","transporter","createTransport","service","auth","user","pass","mailOptions","from","to","subject","text","sendMail","error","info","console","log","json","matchCodeOfUserAndResetPass","newPassword","userCode","password"],"mappings":"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","file":"forget-pass.controller.js","sourcesContent":["import User from '../models/user.model';\nimport mongoose from 'mongoose';\nimport { body, validationResult } from 'express-validator/check';\nimport { toImgUrl } from '../utils/index'\nimport ApiError from '../helpers/ApiError'\nimport ApiResponse from '../helpers/ApiResponse'\nimport nodemailer from 'nodemailer'\n\n\nexport default {\n    async forgetPassword(req, res, next) {\n        try {\n            let phone = req.body.phone;\n            let userDetails = await User.findOne({ phone: phone });\n            if (!userDetails)\n                return res.status(404).end();\n            let email = userDetails.email;\n\n            //generate code \n            let code = Math.floor((Math.random() * 10000) + 1)\n            userDetails.code = code;\n            await userDetails.save();\n\n            //send email \n            let transporter = nodemailer.createTransport({\n                service: 'gmail',\n                auth: {\n                    user: 'rawaa.app@gmail.com',\n                    pass: 'rawaa123456789'\n                }\n            });\n\n            let mailOptions = {\n                from: 'rawaa.app@gmail.com',\n                to: `${email}`,\n                subject: 'Confirmation Code',\n                text: `Hello Dear, \n                Please use this code  ${code}  to reset your password\n                Thanks advanced`\n            }\n\n            transporter.sendMail(mailOptions, (error, info) => {\n                if (error)\n\n                    return console.log(error)\n                return res.status(200).json(info)\n            })\n        } catch (err) {\n            next(err)\n        }\n    },\n\n    //mach code \n    async matchCodeOfUserAndResetPass(req, res, next) {\n        try {\n            if (!req.body.code)\n                return next(new ApiError(422, 'code is required'))\n            let code = req.body.code;\n            if (!req.body.email)\n                return next(new ApiError(422, 'email is required'))\n            let email = req.body.email;\n            if (!req.body.newPassword)\n                return next(new ApiError(422, 'new password is required'))\n            console.log(email)\n            let userDetails = await User.findOne({ email: email });\n            console.log(userDetails)\n            if (!userDetails)\n                return res.status(404).end();\n\n            let userCode = userDetails.code;\n            if (!(code == userCode))\n                return res.status(400).json({\n                    \"message\": \"Invalid code\"\n                })\n            //change password    \n            userDetails.password = req.body.newPassword;\n            await userDetails.save();\n\n            return res.status(204).end();\n        } catch (err) {\n            next(err)\n        }\n    },\n\n\n\n}\n"]}