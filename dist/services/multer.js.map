{"version":3,"sources":["../../src/services/multer.js"],"names":["multerSaveTo","fileFilter","req","file","cb","mimetype","UnprocessableEntity","folderName","storage","diskStorage","destination","console","log","body","dest","err","filename","fieldname","Date","now","Math","floor","random","extname","originalname","limits","fileSize"],"mappings":";;;;;QAWgBA,Y,GAAAA,Y;;AAXhB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAClC,QAAID,KAAKE,QAAL,KAAkB,YAAlB,IAAkCF,KAAKE,QAAL,KAAkB,WAAxD,EAAqE;AACjED,WAAG,IAAH,EAAS,IAAT;AACH,KAFD,MAEOA,GAAG,IAAI,mBAASE,mBAAb,CAAiC,yCAAjC,CAAH;AACV,CAJD;;AAMO,SAASN,YAAT,CAAsBO,UAAtB,EAAkC;;AAErC,QAAIC,UAAU,iBAAOC,WAAP,CAAmB;AAC7BC,qBAAa,qBAAUR,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAClCO,oBAAQC,GAAR,CAAY,iBAAZ,EAA+BV,IAAIW,IAAnC;;AAEA,gBAAIC,wBAAsBP,UAA1B;AACA;AACA,kCAAOO,IAAP,EAAa,UAAUC,GAAV,EAAe;AACxB,oBAAIA,GAAJ,EACI,OAAOX,GAAG,uBAAa,GAAb,EAAkB,sBAAlB,CAAH,CAAP;;AAEJA,mBAAG,IAAH,EAASU,IAAT;AACH,aALD;AAMH,SAZ4B;AAa7BE,kBAAU,kBAAUd,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAC/BA,eAAG,IAAH,EAAYD,KAAKc,SAAjB,UAA8BC,KAAKC,GAAL,KAAaC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAc,KAAzB,CAAb,GAA+C,eAAKC,OAAL,CAAapB,KAAKqB,YAAlB,CAA7E;AACH;AAf4B,KAAnB,CAAd;;AAkBA,WAAO,sBAAO;AACVhB,wBADU;AAEZ;AACEiB,gBAAQ;AACJC,sBAAU,OAAO,IAAP,GAAc,EADpB,CACuB;AADvB;AAHE,KAAP,CAAP,CAMG;AACN","file":"multer.js","sourcesContent":["import multer from 'multer';\r\nimport path from 'path';\r\nimport ApiError from '../helpers/ApiError';\r\nimport mkdirp from 'mkdirp';\r\n\r\nconst fileFilter = (req, file, cb) => {\r\n    if (file.mimetype === 'image/jpeg' || file.mimetype === 'image/png') {\r\n        cb(null, true);\r\n    } else cb(new ApiError.UnprocessableEntity('jpeg or png are the only accepted types'));\r\n}\r\n\r\nexport function multerSaveTo(folderName) {\r\n\r\n    let storage = multer.diskStorage({\r\n        destination: function (req, file, cb) {\r\n            console.log(\"BODY iN DEST : \", req.body);\r\n\r\n            let dest = `src/uploads/${folderName}`;\r\n            // create destination if don't exist\r\n            mkdirp(dest, function (err) {\r\n                if (err)\r\n                    return cb(new ApiError(500, \"Couldn't create dest\"))\r\n\r\n                cb(null, dest)\r\n            });\r\n        },\r\n        filename: function (req, file, cb) {\r\n            cb(null, `${file.fieldname}-${Date.now() + Math.floor(Math.random()*10000) + path.extname(file.originalname)}`);\r\n        }\r\n    });\r\n\r\n    return multer({\r\n        storage,\r\n      //  fileFilter,\r\n        limits: {\r\n            fileSize: 1024 * 1024 * 10 // limit 10mb\r\n        }\r\n    });;\r\n}\r\n"]}