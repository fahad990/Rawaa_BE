{"version":3,"sources":["../../src/models/order.model.js"],"names":["OrderSchema","cartons","type","Number","ref","cartonsQuantity","galons","galonsQuantityOfBuying","galonsQuantityOfSubstitution","price","required","deliveryPrice","location","index","customer","provider","status","String","enum","default","note","creationDate","Date","now","set","transform","doc","ret","options","id","_id","__v","initialize","connection","plugin","model","startAt"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,qBAAW;AAC3BC,aAAS,CAAC;AACNC,cAAMC,MADA;AAENC,aAAK;AAFC,KAAD,CADkB;AAK3BC,qBAAiB,CAAC;AACdH,cAAMC;AADQ,KAAD,CALU;AAQ3BG,YAAQ,CAAC;AACLJ,cAAMC,MADD;AAELC,aAAK;AAFA,KAAD,CARmB;AAY3BG,4BAAwB,CAAC;AACrBL,cAAMC;AADe,KAAD,CAZG;AAe3BK,kCAA8B,CAAC;AAC3BN,cAAMC;AADqB,KAAD,CAfH;AAkB3BM,WAAO;AACHP,cAAMC,MADH;AAEHO,kBAAU;AAFP,KAlBoB;AAsB3BC,mBAAe;AACXT,cAAMC,MADK;AAEXO,kBAAU;AAFC,KAtBY;AA0B3B;AACAE,cAAU;AACNV,cAAM,CAACC,MAAD,CADA,EACU;AAChBO,kBAAU,IAFJ;AAGNG,eAAO;AAHD,KA3BiB;AAgC3BC,cAAU;AACNZ,cAAMC,MADA;AAENC,aAAK;AAFC,KAhCiB;AAoC3BW,cAAU;AACNb,cAAMC,MADA;AAENC,aAAK;AAFC,KApCiB;AAwC3BY,YAAQ;AACJd,cAAMe,MADF;AAEJC,cAAM,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,WAAjD,EAA8D,UAA9D,CAFF;AAGJC,iBAAS;AAHL,KAxCmB;AA6C3BC,UAAM;AACFlB,cAAMe;AADJ,KA7CqB;AAgD3BI,kBAAc;AACVnB,cAAMoB,IADI;AAEVH,iBAASG,KAAKC;AAFJ;AAhDa,CAAX,CAApB;;AAsDAvB,YAAYwB,GAAZ,CAAgB,QAAhB,EAA0B;AACtBC,eAAW,mBAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAuB;AAC9BD,YAAIE,EAAJ,GAASF,IAAIG,GAAb;AACA,eAAOH,IAAIG,GAAX;AACA,eAAOH,IAAII,GAAX;AACH;AALqB,CAA1B;;AASA,gCAAcC,UAAd,CAAyB,mBAASC,UAAlC;AACAjC,YAAYkC,MAAZ,CAAmB,gCAAcA,MAAjC,EAAyC;AACrCC,WAAO,OAD8B;AAErCC,aAAS;AAF4B,CAAzC;;kBAKe,mBAASD,KAAT,CAAe,OAAf,EAAwBnC,WAAxB,C","file":"order.model.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nimport autoIncrement from 'mongoose-auto-increment';\n\nconst OrderSchema = new Schema({\n    cartons: [{\n        type: Number,\n        ref: 'carton',\n    }],\n    cartonsQuantity: [{\n        type: Number,\n    }],\n    galons: [{\n        type: Number,\n        ref: \"galon\",\n    }],\n    galonsQuantityOfBuying: [{\n        type: Number,\n    }],\n    galonsQuantityOfSubstitution: [{\n        type: Number,\n    }],\n    price: {\n        type: Number,\n        required: true\n    },\n    deliveryPrice: {\n        type: Number,\n        required: true\n    },\n    //location of deliver\n    location: {\n        type: [Number], // Don't forget [0=>longitude,1=>latitude]\n        required: true,\n        index: '2d'\n    },\n    customer: {\n        type: Number,\n        ref: \"user\"\n    },\n    provider: {\n        type: Number,\n        ref: \"user\"\n    },\n    status: {\n        type: String,\n        enum: [\"pendding\", \"accepted\", \"rejected\", \"onTheWay\", \"delivered\", \"canceled\"],\n        default: \"pendding\",\n    },\n    note: {\n        type: String,\n    },\n    creationDate: {\n        type: Date,\n        default: Date.now\n    }\n})\n\nOrderSchema.set('toJSON', {\n    transform: (doc, ret, options) => {\n        ret.id = ret._id;\n        delete ret._id;\n        delete ret.__v;\n    }\n});\n\n\nautoIncrement.initialize(mongoose.connection);\nOrderSchema.plugin(autoIncrement.plugin, {\n    model: 'order',\n    startAt: 1,\n});\n\nexport default mongoose.model(\"order\", OrderSchema); "]}