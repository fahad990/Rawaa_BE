{"version":3,"sources":["../../src/models/user.model.js"],"names":["UserSchema","name","type","String","trim","required","enum","default","password","phone","unique","img","creationDate","Date","company","active","Boolean","email","pushTokens","pre","next","account","isModified","salt","genSaltSync","hash","then","catch","console","log","err","methods","isValidPassword","newPassword","callback","user","compare","isMatch","set","transform","doc","ret","options","id","_id","__v","initialize","connection","plugin","model","startAt"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,qBAAW;AAC1BC,UAAM;AACFC,cAAMC,MADJ;AAEFC,cAAM,IAFJ;AAGFC,kBAAU;AAHR,KADoB;AAM1BH,UAAM;AACFA,cAAMC,MADJ;AAEFG,cAAM,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,CAFJ;AAGFC,iBAAS;AAHP,KANoB;AAW1BC,cAAU;AACNN,cAAMC,MADA;AAENE,kBAAU;AAFJ,KAXgB;AAe1BI,WAAO;AACHP,cAAMC,MADH;AAEHE,kBAAU,IAFP;AAGHK,gBAAQ,CAAC,IAAD,EAAO,kBAAP;AAHL,KAfmB;AAoB1BC,SAAK,EAAE;AACHT,cAAMC,MADL;AAEDI,iBAAS;AAFR,KApBqB;AAwB1BK,kBAAc;AACVV,cAAMW,IADI;AAEVN,iBAAS,IAAIM,IAAJ;AAFC,KAxBY;AA4B1BC,aAAS;AACLZ,cAAMC;AADD,KA5BiB;AA+B1BY,YAAQ;AACJb,cAAMc,OADF;AAEJT,iBAAS;AAFL,KA/BkB;AAmC1BU,WAAQ;AACJf,cAAOC;AADH,KAnCkB;AAsC1Be,gBAAY,CAAC;AACThB,cAAMC;AADG,KAAD;;AAtCc,CAAX,CAAnB;;AA8CAH,WAAWmB,GAAX,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACnC,QAAMC,UAAU,IAAhB;AACA,QAAI,CAACA,QAAQC,UAAR,CAAmB,UAAnB,CAAL,EAAqC,OAAOF,MAAP;;AAErC,QAAMG,OAAO,mBAAOC,WAAP,EAAb;AACA,uBAAOC,IAAP,CAAYJ,QAAQb,QAApB,EAA8Be,IAA9B,EAAoCG,IAApC,CAAyC,gBAAQ;AAC7CL,gBAAQb,QAAR,GAAmBiB,IAAnB;AACAL;AACH,KAHD,EAGGO,KAHH,CAGS;AAAA,eAAOC,QAAQC,GAAR,CAAYC,GAAZ,CAAP;AAAA,KAHT;AAIH,CATD;;AAcA9B,WAAW+B,OAAX,CAAmBC,eAAnB,GAAqC,UAAUC,WAAV,EAAuBC,QAAvB,EAAiC;AAClE,QAAIC,OAAO,IAAX;AACA,uBAAOC,OAAP,CAAeH,WAAf,EAA4BE,KAAK3B,QAAjC,EAA2C,UAAUsB,GAAV,EAAeO,OAAf,EAAwB;AAC/D,YAAIP,GAAJ,EACI,OAAOI,SAASJ,GAAT,CAAP;AACJI,iBAAS,IAAT,EAAeG,OAAf;AACH,KAJD;AAKH,CAPD;;AAUArC,WAAWsC,GAAX,CAAe,QAAf,EAAyB;AACrBC,eAAW,mBAAUC,GAAV,EAAeC,GAAf,EAAoBC,OAApB,EAA6B;AACpCD,YAAIE,EAAJ,GAASF,IAAIG,GAAb;;AAEA,eAAOH,IAAIjC,QAAX;AACA,eAAOiC,IAAIvB,UAAX;AACA,eAAOuB,IAAIG,GAAX;AACA,eAAOH,IAAII,GAAX;AACH;AARoB,CAAzB;;AAWA,gCAAcC,UAAd,CAAyB,mBAASC,UAAlC;AACA/C,WAAWgD,MAAX,CAAkB,gCAAcA,MAAhC,EAAwC;AACpCC,WAAO,MAD6B;AAEpCC,aAAS;AAF2B,CAAxC;;kBAKe,mBAASD,KAAT,CAAe,MAAf,EAAuBjD,UAAvB,C","file":"user.model.js","sourcesContent":["import mongoose, { Schema } from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\nimport autoIncrement from 'mongoose-auto-increment';\n\nconst UserSchema = new Schema({\n    name: {\n        type: String,\n        trim: true,\n        required: true\n    },\n    type: {\n        type: String,\n        enum: [\"ADMIN\", \"NORMAL\", \"PROVIDER\"],\n        default: \"NORMAL\"\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    phone: {\n        type: String,\n        required: true,\n        unique: [true, \"Duplicated Phone\"]\n    },\n    img: { // url \n        type: String,\n        default: \"https://cdn1.iconfinder.com/data/icons/people-cultures/512/_saudi_arabian_man-512.png\"\n    },\n    creationDate: {\n        type: Date,\n        default: new Date\n    },\n    company: {\n        type: String,\n    },\n    active: {\n        type: Boolean,\n        default: false\n    },\n    email : {\n        type : String\n    },\n    pushTokens: [{\n        type: String\n    }]\n\n});\n\n\n\nUserSchema.pre(\"save\", function (next) {\n    const account = this;\n    if (!account.isModified('password')) return next();\n\n    const salt = bcrypt.genSaltSync();\n    bcrypt.hash(account.password, salt).then(hash => {\n        account.password = hash;\n        next();\n    }).catch(err => console.log(err));\n});\n\n\n\n\nUserSchema.methods.isValidPassword = function (newPassword, callback) {\n    let user = this;\n    bcrypt.compare(newPassword, user.password, function (err, isMatch) {\n        if (err)\n            return callback(err);\n        callback(null, isMatch);\n    })\n};\n\n\nUserSchema.set('toJSON', {\n    transform: function (doc, ret, options) {\n        ret.id = ret._id;\n\n        delete ret.password;\n        delete ret.pushTokens;\n        delete ret._id;\n        delete ret.__v;\n    }\n});\n\nautoIncrement.initialize(mongoose.connection);\nUserSchema.plugin(autoIncrement.plugin, {\n    model: 'user',\n    startAt: 1,\n});\n\nexport default mongoose.model(\"user\", UserSchema);"]}