{"version":3,"sources":["../../src/controllers/push-notifications.controller.js"],"names":["_","subscribe","req","res","next","user","findById","id","token","body","pushTokens","push","save","status","end","update","oldToken","newToken","includes","tokens","without","unsubscribe"],"mappings":";;;;;;;;AACA;;;;AACA;;IAAYA,C;;AACZ;;;;;;;;;;kBAEe;AAGLC,aAHK,qBAGKC,GAHL,EAGUC,GAHV,EAGeC,IAHf,EAGqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,gCAFwB,GAEjBH,IAAIG,IAFa;AAAA;AAAA,mCAGf,eAAKC,QAAL,CAAcD,KAAKE,EAAnB,CAHe;;AAAA;AAG5BF,gCAH4B;AAKxBG,iCALwB,GAKhBN,IAAIO,IAAJ,CAASD,KALO;;AAAA,gCAOvBA,KAPuB;AAAA;AAAA;AAAA;;AAAA,6DAQjBJ,KAAK,uBAAa,GAAb,EAAkB,mBAAlB,CAAL,CARiB;;AAAA;;AAU5BC,iCAAKK,UAAL,CAAgBC,IAAhB,CAAqBH,KAArB;AAV4B;AAAA,mCAWtBH,KAAKO,IAAL,EAXsB;;AAAA;;AAa5BT,gCAAIU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAb4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe/B,KAlBU;AAoBLC,UApBK,kBAoBEb,GApBF,EAoBOC,GApBP,EAoBYC,IApBZ,EAoBkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,gCAFqB,GAEdH,IAAIG,IAFU;AAAA;AAAA,mCAGZ,eAAKC,QAAL,CAAcD,KAAKE,EAAnB,CAHY;;AAAA;AAGzBF,gCAHyB;AAKrBW,oCALqB,GAKVd,IAAIO,IAAJ,CAASO,QALC;AAMrBC,oCANqB,GAMVf,IAAIO,IAAJ,CAASQ,QANC;;AAAA,gCAQpBD,QARoB;AAAA;AAAA;AAAA;;AAAA,8DASdZ,KAAK,uBAAa,GAAb,EAAkB,sBAAlB,CAAL,CATc;;AAAA;AAAA,gCAWpBa,QAXoB;AAAA;AAAA;AAAA;;AAAA,8DAYdb,KAAK,uBAAa,GAAb,EAAkB,sBAAlB,CAAL,CAZc;;AAAA;AAAA,gCAcpBC,KAAKK,UAAL,CAAgBQ,QAAhB,CAAyBF,QAAzB,CAdoB;AAAA;AAAA;AAAA;;AAAA,8DAedZ,KAAK,uBAAa,GAAb,EAAkB,mCAAlB,CAAL,CAfc;;AAAA;AAiBrBe,kCAjBqB,gBAiBPnB,EAAEoB,OAAF,CAAUf,KAAKK,UAAf,EAA2BM,QAA3B,CAjBO,IAiB+BC,kBAjB/B;;AAkBzBZ,iCAAKK,UAAL,GAAkBS,MAAlB;;AAlByB;AAAA,mCAoBnBd,KAAKO,IAAL,EApBmB;;AAAA;;AAsBzBT,gCAAIU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAtByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuB5B,KA3CU;AA8CLO,eA9CK,uBA8COnB,GA9CP,EA8CYC,GA9CZ,EA8CiBC,IA9CjB,EA8CuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BC,gCAF0B,GAEnBH,IAAIG,IAFe;AAAA;AAAA,mCAGjB,eAAKC,QAAL,CAAcD,KAAKE,EAAnB,CAHiB;;AAAA;AAG9BF,gCAH8B;AAK1BG,iCAL0B,GAKlBN,IAAIO,IAAJ,CAASD,KALS;;AAAA,gCAMzBA,KANyB;AAAA;AAAA;AAAA;;AAAA,8DAOnBJ,KAAK,uBAAa,GAAb,EAAkB,mBAAlB,CAAL,CAPmB;;AAAA;AAS1Be,kCAT0B,GASjBnB,EAAEoB,OAAF,CAAUf,KAAKK,UAAf,EAA2BF,KAA3B,CATiB;;AAU9BH,iCAAKK,UAAL,GAAkBS,MAAlB;;AAV8B;AAAA,mCAYxBd,KAAKO,IAAL,EAZwB;;AAAA;AAa9BT,gCAAIU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAb8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcjC;AA5DU,C","file":"push-notifications.controller.js","sourcesContent":["\nimport User from \"../models/user.model\";\nimport * as _ from \"lodash\";\nimport ApiError from '../helpers/ApiError';\n\nexport default {\n\n\n    async subscribe(req, res, next) {\n\n        let user = req.user;\n        user = await User.findById(user.id) ;\n\n        let token = req.body.token;\n\n        if (!token)\n            return next(new ApiError(422, \"token is required\"));\n\n        user.pushTokens.push(token);\n        await user.save();\n\n        res.status(204).end();\n\n    },\n\n    async update(req, res, next) {\n\n        let user = req.user;\n        user = await User.findById(user.id) ;\n\n        let oldToken = req.body.oldToken;\n        let newToken = req.body.newToken;\n\n        if (!oldToken)\n            return next(new ApiError(422, \"oldToken is required\"));\n\n        if (!newToken)\n            return next(new ApiError(422, \"newToken is required\"));\n\n        if (!user.pushTokens.includes(oldToken))\n            return next(new ApiError(422, \"oldToken not exists in this user \"));\n\n        let tokens = { ..._.without(user.pushTokens, oldToken), newToken };\n        user.pushTokens = tokens;\n\n        await user.save();\n\n        res.status(204).end();\n    },\n\n\n    async unsubscribe(req, res, next) {\n\n        let user = req.user;\n        user = await User.findById(user.id) ;\n\n        let token = req.body.token;\n        if (!token)\n            return next(new ApiError(422, \"token is required\"));\n\n        let tokens = _.without(user.pushTokens, token);\n        user.pushTokens = tokens;\n\n        await user.save();\n        res.status(204).end();\n    }\n\n    \n}\n"]}