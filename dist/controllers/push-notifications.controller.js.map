{"version":3,"sources":["../../src/controllers/push-notifications.controller.js"],"names":["_","subscribe","req","res","next","user","findById","id","token","body","pushTokens","push","save","status","end","update","oldToken","newToken","includes","tokens","without","unsubscribe"],"mappings":";;;;;;;;AACA;;;;AACA;;IAAYA,C;;AACZ;;;;;;;;;;kBAEe;AAGLC,iBAHK,qBAGKC,GAHL,EAGUC,GAHV,EAGeC,IAHf,EAGqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,4DAFwB,GAEjBH,IAAIG,IAFa;AAAA;AAAA,+DAGf,eAAKC,QAAL,CAAcD,KAAKE,EAAnB,CAHe;;AAAA;AAG5BF,4DAH4B;AAKxBG,6DALwB,GAKhBN,IAAIO,IAAJ,CAASD,KALO;;AAAA,4DAOvBA,KAPuB;AAAA;AAAA;AAAA;;AAAA,yFAQjBJ,KAAK,uBAAa,GAAb,EAAkB,mBAAlB,CAAL,CARiB;;AAAA;;AAU5BC,6DAAKK,UAAL,CAAgBC,IAAhB,CAAqBH,KAArB;AAV4B;AAAA,+DAWtBH,KAAKO,IAAL,EAXsB;;AAAA;;AAa5BT,4DAAIU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAb4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe/B,SAlBU;AAoBLC,cApBK,kBAoBEb,GApBF,EAoBOC,GApBP,EAoBYC,IApBZ,EAoBkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,4DAFqB,GAEdH,IAAIG,IAFU;AAAA;AAAA,+DAGZ,eAAKC,QAAL,CAAcD,KAAKE,EAAnB,CAHY;;AAAA;AAGzBF,4DAHyB;AAKrBW,gEALqB,GAKVd,IAAIO,IAAJ,CAASO,QALC;AAMrBC,gEANqB,GAMVf,IAAIO,IAAJ,CAASQ,QANC;;AAAA,4DAQpBD,QARoB;AAAA;AAAA;AAAA;;AAAA,0FASdZ,KAAK,uBAAa,GAAb,EAAkB,sBAAlB,CAAL,CATc;;AAAA;AAAA,4DAWpBa,QAXoB;AAAA;AAAA;AAAA;;AAAA,0FAYdb,KAAK,uBAAa,GAAb,EAAkB,sBAAlB,CAAL,CAZc;;AAAA;AAAA,4DAcpBC,KAAKK,UAAL,CAAgBQ,QAAhB,CAAyBF,QAAzB,CAdoB;AAAA;AAAA;AAAA;;AAAA,0FAedZ,KAAK,uBAAa,GAAb,EAAkB,mCAAlB,CAAL,CAfc;;AAAA;AAiBrBe,8DAjBqB,gBAiBPnB,EAAEoB,OAAF,CAAUf,KAAKK,UAAf,EAA2BM,QAA3B,CAjBO,IAiB+BC,kBAjB/B;;AAkBzBZ,6DAAKK,UAAL,GAAkBS,MAAlB;;AAlByB;AAAA,+DAoBnBd,KAAKO,IAAL,EApBmB;;AAAA;;AAsBzBT,4DAAIU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAtByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuB5B,SA3CU;AA8CLO,mBA9CK,uBA8COnB,GA9CP,EA8CYC,GA9CZ,EA8CiBC,IA9CjB,EA8CuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BC,4DAF0B,GAEnBH,IAAIG,IAFe;AAAA;AAAA,+DAGjB,eAAKC,QAAL,CAAcD,KAAKE,EAAnB,CAHiB;;AAAA;AAG9BF,4DAH8B;AAK1BG,6DAL0B,GAKlBN,IAAIO,IAAJ,CAASD,KALS;;AAAA,4DAMzBA,KANyB;AAAA;AAAA;AAAA;;AAAA,0FAOnBJ,KAAK,uBAAa,GAAb,EAAkB,mBAAlB,CAAL,CAPmB;;AAAA;AAS1Be,8DAT0B,GASjBnB,EAAEoB,OAAF,CAAUf,KAAKK,UAAf,EAA2BF,KAA3B,CATiB;;AAU9BH,6DAAKK,UAAL,GAAkBS,MAAlB;;AAV8B;AAAA,+DAYxBd,KAAKO,IAAL,EAZwB;;AAAA;AAa9BT,4DAAIU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAb8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcjC;AA5DU,C","file":"push-notifications.controller.js","sourcesContent":["\r\nimport User from \"../models/user.model\";\r\nimport * as _ from \"lodash\";\r\nimport ApiError from '../helpers/ApiError';\r\n\r\nexport default {\r\n\r\n\r\n    async subscribe(req, res, next) {\r\n\r\n        let user = req.user;\r\n        user = await User.findById(user.id) ;\r\n\r\n        let token = req.body.token;\r\n\r\n        if (!token)\r\n            return next(new ApiError(422, \"token is required\"));\r\n\r\n        user.pushTokens.push(token);\r\n        await user.save();\r\n\r\n        res.status(204).end();\r\n\r\n    },\r\n\r\n    async update(req, res, next) {\r\n\r\n        let user = req.user;\r\n        user = await User.findById(user.id) ;\r\n\r\n        let oldToken = req.body.oldToken;\r\n        let newToken = req.body.newToken;\r\n\r\n        if (!oldToken)\r\n            return next(new ApiError(422, \"oldToken is required\"));\r\n\r\n        if (!newToken)\r\n            return next(new ApiError(422, \"newToken is required\"));\r\n\r\n        if (!user.pushTokens.includes(oldToken))\r\n            return next(new ApiError(422, \"oldToken not exists in this user \"));\r\n\r\n        let tokens = { ..._.without(user.pushTokens, oldToken), newToken };\r\n        user.pushTokens = tokens;\r\n\r\n        await user.save();\r\n\r\n        res.status(204).end();\r\n    },\r\n\r\n\r\n    async unsubscribe(req, res, next) {\r\n\r\n        let user = req.user;\r\n        user = await User.findById(user.id) ;\r\n\r\n        let token = req.body.token;\r\n        if (!token)\r\n            return next(new ApiError(422, \"token is required\"));\r\n\r\n        let tokens = _.without(user.pushTokens, token);\r\n        user.pushTokens = tokens;\r\n\r\n        await user.save();\r\n        res.status(204).end();\r\n    }\r\n\r\n    \r\n}\r\n"]}