{"version":3,"sources":["../../src/controllers/messageAdmin.controller.js"],"names":["createMessage","req","res","next","targetId","params","userId","user","id","object","text","body","targetUser","create","newMessage","status","json","allMessageOfOneUser","find","populate","allDocs"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;kBAEe;AACLA,iBADK,yBACSC,GADT,EACcC,GADd,EACmBC,IADnB,EACyB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,oCAFwB,GAEbH,IAAII,MAAJ,CAAWC,MAFE;AAGxBA,kCAHwB,GAGfL,IAAIM,IAAJ,CAASC,EAHM;AAKxBC,kCALwB,GAKf;AACTF,sCAAMD,MADG;AAETI,sCAAMT,IAAIU,IAAJ,CAASD,IAFN;AAGTE,4CAAYR;AAHH,6BALe;AAAA;AAAA,mCAUL,uBAAQS,MAAR,CAAeJ,MAAf,CAVK;;AAAA;AAUxBK,sCAVwB;AAAA,6DAWrBZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,UAArB,CAXqB;;AAAA;AAAA;AAAA;;AAa5BX;;AAb4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAenC,KAhBU;;AAiBX;AACMc,uBAlBK,+BAkBehB,GAlBf,EAkBoBC,GAlBpB,EAkByBC,IAlBzB,EAkB+B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE9BG,kCAF8B,GAErBL,IAAII,MAAJ,CAAWC,MAFU;AAAA;AAAA,mCAGd,uBAAQY,IAAR,CAAa,EAAEN,YAAYN,MAAd,EAAb,EACfa,QADe,CACN,YADM,EAEfA,QAFe,CAEN,MAFM,CAHc;;AAAA;AAG9BC,mCAH8B;AAAA,8DAM3BlB,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,OAArB,CAN2B;;AAAA;AAAA;AAAA;;AAQlCjB;;AARkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUzC;AA5BU,C","file":"messageAdmin.controller.js","sourcesContent":["import Message from '../models/message-admin.model'\nimport mongoose from 'mongoose';\nimport { body, validationResult } from 'express-validator/check';\nimport ApiError from '../helpers/ApiError'\nimport ApiResponse from '../helpers/ApiResponse'\n\nexport default {\n    async createMessage(req, res, next) {\n        try {\n            let targetId = req.params.userId;\n            let userId = req.user.id;\n\n            let object = {\n                user: userId,\n                text: req.body.text,\n                targetUser: targetId\n            }\n            let newMessage = await Message.create(object);\n            return res.status(201).json(newMessage);\n        } catch (err) {\n            next(err)\n        }\n    },\n    //retrive all messages\n    async allMessageOfOneUser(req, res, next) {\n        try {\n            let userId = req.params.userId\n            let allDocs = await Message.find({ targetUser: userId })\n                .populate('targetUser')\n                .populate('user')\n            return res.status(200).json(allDocs)\n        } catch (err) {\n            next(err)\n        }\n    },\n}"]}