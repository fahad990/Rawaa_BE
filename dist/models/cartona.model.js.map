{"version":3,"sources":["../../src/models/cartona.model.js"],"names":["CartonSchema","img","type","String","required","numberOfBottles","Number","default","sizeOfBottles","typeOfSize","enum","price","typeOfOrder","minimumNumberOnOrder","user","ref","available","Boolean","creationDate","Date","now","set","transform","doc","ret","options","id","_id","__v","initialize","connection","plugin","model","startAt"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,qBAAW;AAC5BC,SAAK;AACDC,cAAMC,MADL;AAEDC,kBAAU;AAFT,KADuB;AAK5BC,qBAAiB;AACbH,cAAMI,MADO;AAEbC,iBAAS,CAFI;AAGbH,kBAAU;AAHG,KALW;AAU5BI,mBAAe;AACXN,cAAMI,MADK;AAEXF,kBAAU;AAFC,KAVa;AAc5BK,gBAAY;AACRP,cAAMC,MADE;AAERO,cAAM,CAAC,OAAD,EAAU,YAAV,CAFE;AAGRH,iBAAS;AAHD,KAdgB;AAmB5BI,WAAO;AACHT,cAAMI,MADH;AAEHF,kBAAU;AAFP,KAnBqB;AAuB5BQ,iBAAa;AACTV,cAAMC,MADG;AAETO,cAAM,CAAC,QAAD,EAAW,cAAX,CAFG;AAGTH,iBAAS;AAHA,KAvBe;AA4B5BM,0BAAsB;AAClBX,cAAMI,MADY;AAElBC,iBAAS;AAFS,KA5BM;AAgC5BO,UAAM;AACFZ,cAAMI,MADJ;AAEFS,aAAK;AAFH,KAhCsB;AAoC5BC,eAAW;AACPd,cAAMe,OADC;AAEPV,iBAAS;AAFF,KApCiB;AAwC5BW,kBAAc;AACVhB,cAAMiB,IADI;AAEVZ,iBAASY,KAAKC;AAFJ;AAxCc,CAAX,CAArB;;AA8CApB,aAAaqB,GAAb,CAAiB,QAAjB,EAA2B;AACvBC,eAAW,mBAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAuB;AAC9BD,YAAIE,EAAJ,GAASF,IAAIG,GAAb;AACA,eAAOH,IAAIG,GAAX;AACA,eAAOH,IAAII,GAAX;AACH;AALsB,CAA3B;;AASA,gCAAcC,UAAd,CAAyB,mBAASC,UAAlC;AACA9B,aAAa+B,MAAb,CAAoB,gCAAcA,MAAlC,EAA0C;AACtCC,WAAO,QAD+B;AAEtCC,aAAS;AAF6B,CAA1C;;kBAKe,mBAASD,KAAT,CAAe,QAAf,EAAyBhC,YAAzB,C","file":"cartona.model.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\r\nimport autoIncrement from 'mongoose-auto-increment';\r\n\r\nconst CartonSchema = new Schema({\r\n    img: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    numberOfBottles: {\r\n        type: Number,\r\n        default: 1,\r\n        required: true\r\n    },\r\n    sizeOfBottles: {\r\n        type: Number,\r\n        required: true\r\n    },\r\n    typeOfSize: {\r\n        type: String,\r\n        enum: ['liter', 'Millimeter'],\r\n        default: 'liter'\r\n    },\r\n    price: {\r\n        type: Number,\r\n        required: true\r\n    },\r\n    typeOfOrder: {\r\n        type: String,\r\n        enum: ['buying', 'substitution'],\r\n        default: 'buying'\r\n    },\r\n    minimumNumberOnOrder: {\r\n        type: Number,\r\n        default: 3,\r\n    },\r\n    user: {\r\n        type: Number,\r\n        ref: \"user\"\r\n    },\r\n    available: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    creationDate: {\r\n        type: Date,\r\n        default: Date.now\r\n    }\r\n})\r\n\r\nCartonSchema.set('toJSON', {\r\n    transform: (doc, ret, options) => {\r\n        ret.id = ret._id;\r\n        delete ret._id;\r\n        delete ret.__v;\r\n    }\r\n});\r\n\r\n\r\nautoIncrement.initialize(mongoose.connection);\r\nCartonSchema.plugin(autoIncrement.plugin, {\r\n    model: 'carton',\r\n    startAt: 1,\r\n});\r\n\r\nexport default mongoose.model(\"carton\", CartonSchema); "]}